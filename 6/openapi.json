{"openapi": "3.1.0", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/orders/": {"get": {"summary": "Get Orders", "description": "Retrieves a list of all orders in the system.\n\nReturns:\n- A list of Order objects representing all existing orders.", "operationId": "get_orders_orders__get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Order"}, "type": "array", "title": "Response Get Orders Orders  Get"}}}}}}, "post": {"summary": "Create Order", "description": "Creates a new order and stores it in the orders database.\n\nParameters:\n- **order**: An Order object containing the details of the order to be created.\n\nReturns:\n- The created Order object.", "operationId": "create_order_orders__post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Order"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Order"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/orders/{order_id}": {"get": {"summary": "Get Order", "description": "Retrieves a specific order by its unique ID.\n\nParameters:\n- **order_id**: The unique identifier of the order to retrieve.\n\nReturns:\n- The Order object corresponding to the specified ID.\n\nRaises:\n- HTTPException: If the order is not found (404).", "operationId": "get_order_orders__order_id__get", "parameters": [{"name": "order_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Order Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Order"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"summary": "Update Order", "description": "Updates the status of an existing order.\n\nParameters:\n- **order_id**: The unique identifier of the order to update.\n- **status**: The new status to set for the order.\n\nReturns:\n- The updated Order object.\n\nRaises:\n- HTTPException: If the order is not found (404).", "operationId": "update_order_orders__order_id__put", "parameters": [{"name": "order_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Order Id"}}, {"name": "status", "in": "query", "required": true, "schema": {"$ref": "#/components/schemas/OrderStatus"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Order"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Delete Order", "description": "Deletes an existing order by its unique ID.\n\nParameters:\n- **order_id**: The unique identifier of the order to delete.\n\nReturns:\n- A message indicating the deletion of the order.\n\nRaises:\n- HTTPException: If the order is not found (404).", "operationId": "delete_order_orders__order_id__delete", "parameters": [{"name": "order_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Order Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "title": "Response Delete Order Orders  Order Id  Delete"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "Order": {"properties": {"order_id": {"type": "integer", "title": "Order Id"}, "product_id": {"type": "integer", "title": "Product Id"}, "quantity": {"type": "integer", "title": "Quantity"}, "source_warehouse_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Source Warehouse Id"}, "destination_warehouse_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Destination Warehouse Id"}, "supplier_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Supplier Id"}, "status": {"$ref": "#/components/schemas/OrderStatus", "default": "pending"}}, "type": "object", "required": ["order_id", "product_id", "quantity"], "title": "Order", "description": "Represents an order in the system.\n\nAttributes:\n- order_id: Unique identifier for the order (int).\n- product_id: Identifier for the product being ordered (int).\n- quantity: Quantity of the product to order (int).\n- source_warehouse_id: (Optional) ID of the warehouse from which the product is sourced (int).\n- destination_warehouse_id: (Optional) ID of the warehouse to which the product is sent (int).\n- supplier_id: (Optional) ID of the supplier of the product (int).\n- status: Current status of the order, defaults to 'pending' (OrderStatus)."}, "OrderStatus": {"type": "string", "enum": ["pending", "in_progress", "completed", "canceled"], "title": "OrderStatus", "description": "Enum representing the various statuses an order can have.\nThis helps standardize the order states throughout the application.\n\nAttributes:\n- pending: The order is awaiting processing.\n- in_progress: The order is currently being processed.\n- completed: The order has been successfully completed.\n- canceled: The order has been canceled and will not be processed."}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}